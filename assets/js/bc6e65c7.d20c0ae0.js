"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[678],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},g=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=l(r),v=i,d=p["".concat(s,".").concat(v)]||p[v]||u[v]||o;return r?n.createElement(d,a(a({ref:t},g),{},{components:r})):n.createElement(d,a({ref:t},g))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=v;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},5057:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={id:"overview_elastic_aggregation",title:"Overview"},a=void 0,c={unversionedId:"overview/overview_elastic_aggregation",id:"overview/overview_elastic_aggregation",title:"Overview",description:"In order to execute Elasticsearch aggregation requests...",source:"@site/../modules/docs/target/mdoc/overview/elastic_aggregation.md",sourceDirName:"overview",slug:"/overview/overview_elastic_aggregation",permalink:"/zio-elasticsearch/overview/overview_elastic_aggregation",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/elastic_aggregation.md",tags:[],version:"current",frontMatter:{id:"overview_elastic_aggregation",title:"Overview"},sidebar:"docs",previous:{title:"Exists Query",permalink:"/zio-elasticsearch/overview/queries/overview_elastic_query_exists"},next:{title:"Terms Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/overview_elastic_aggregation_terms"}},s={},l=[],g={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In order to execute Elasticsearch aggregation requests...\nAggregations are described with the ",(0,i.kt)("inlineCode",{parentName:"p"},"ElasticAggregation")," data type, which can be constructed from the DSL methods found under the following import:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.elasticsearch.ElasticAggregation._\n")),(0,i.kt)("p",null,"TBD"))}u.isMDXComponent=!0}}]);