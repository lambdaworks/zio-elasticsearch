"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3112],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=n,y=p["".concat(c,".").concat(m)]||p[m]||h[m]||i;return r?a.createElement(y,o(o({ref:t},u),{},{components:r})):a.createElement(y,o({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5282:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={id:"elastic_query_match_phrase",title:"Match Phrase Query"},o=void 0,s={unversionedId:"overview/queries/elastic_query_match_phrase",id:"overview/queries/elastic_query_match_phrase",title:"Match Phrase Query",description:"The MatchPhrase query analyzes the text and creates a phrase query out of the analyzed text.",source:"@site/../modules/docs/target/mdoc/overview/queries/elastic_query_match_phrase.md",sourceDirName:"overview/queries",slug:"/overview/queries/elastic_query_match_phrase",permalink:"/zio-elasticsearch/overview/queries/elastic_query_match_phrase",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/queries/elastic_query_match_phrase.md",tags:[],version:"current",frontMatter:{id:"elastic_query_match_phrase",title:"Match Phrase Query"},sidebar:"docs",previous:{title:"Match All Query",permalink:"/zio-elasticsearch/overview/queries/elastic_query_match_all"},next:{title:"Nested Query",permalink:"/zio-elasticsearch/overview/queries/elastic_query_nested"}},c={},l=[],u={toc:l},p="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"MatchPhrase")," query analyzes the text and creates a ",(0,n.kt)("inlineCode",{parentName:"p"},"phrase")," query out of the analyzed text."),(0,n.kt)("p",null,"In order to use the ",(0,n.kt)("inlineCode",{parentName:"p"},"MatchPhrase")," query import the following:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.elasticsearch.query.MatchPhraseQuery\nimport zio.elasticsearch.ElasticQuery._\n")),(0,n.kt)("p",null,"You can create a ",(0,n.kt)("inlineCode",{parentName:"p"},"MatchPhrase")," query using the ",(0,n.kt)("inlineCode",{parentName:"p"},"matchPhrase")," method this way:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val query: MatchPhraseQuery = matchPhrase(field = "stringField", value = "test")\n')),(0,n.kt)("p",null,"You can create a ",(0,n.kt)("a",{parentName:"p",href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema"},"type-safe")," ",(0,n.kt)("inlineCode",{parentName:"p"},"MatchPhrase")," query using the ",(0,n.kt)("inlineCode",{parentName:"p"},"matchPhrase")," method this way:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val query: MatchPhraseQuery = matchPhrase(field = Document.stringField, value = "test")\n')),(0,n.kt)("p",null,"If you want to change the ",(0,n.kt)("inlineCode",{parentName:"p"},"boost"),", you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"boost")," method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val queryWithBoost: MatchPhraseQuery = matchPhrase(field = Document.stringField, value = "test")g.boost(2.0)\n')),(0,n.kt)("p",null,"You can find more information about ",(0,n.kt)("inlineCode",{parentName:"p"},"MatchPhrase")," query ",(0,n.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/query-dsl-match-query-phrase.html"},"here"),"."))}h.isMDXComponent=!0}}]);