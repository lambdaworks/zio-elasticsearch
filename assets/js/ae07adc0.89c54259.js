"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8860],{1100:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var s=r(5893),n=r(3905);const a={id:"elastic_request_update",title:"Update Request"},i=void 0,c={unversionedId:"overview/requests/elastic_request_update",id:"overview/requests/elastic_request_update",title:"Update Request",description:"This request is used for updating a document either with script or with other document as parameter.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_update.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_update",permalink:"/zio-elasticsearch/overview/requests/elastic_request_update",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_update.md",tags:[],version:"current",frontMatter:{id:"elastic_request_update",title:"Update Request"},sidebar:"docs",previous:{title:"Search Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_search"},next:{title:"Update By Query Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_update_by_query"}},d={},o=[];function u(e){const t=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,n.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This request is used for updating a document either with script or with other document as parameter."}),"\n",(0,s.jsxs)(t.p,{children:["In order to use the ",(0,s.jsx)(t.code,{children:"Update"})," request import the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"import zio.elasticsearch.ElasticRequest.UpdateRequest\nimport zio.elasticsearch.ElasticRequest._\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can create a ",(0,s.jsx)(t.code,{children:"Update"})," request using the ",(0,s.jsx)(t.code,{children:"update"})," method with specified document this way:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'// this import is required for using `IndexName` and `DocumentId`\nimport zio.elasticsearch._\nimport zio.schema.Schema\n\n// example of document\nfinal case class User(id: String, username: String)\n\nval user: User = User(id = "1", username = "johndoe")\n\nimplicit val schema: Schema.CaseClass2[String, String, User] = DeriveSchema.gen[GitHubRepo]\n\nval request: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user)\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can create a ",(0,s.jsx)(t.code,{children:"Update"})," request using the ",(0,s.jsx)(t.code,{children:"updateByScript"})," method with specified script this way:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'import zio.elasticsearch._\nimport zio.elasticsearch.script.Script\n\nval request: UpdateRequest = updateByScript(index = IndexName("index"), id = DocumentId("documentId"), script = Script("ctx._source.intField += params[\'factor\']").params("factor" -> 2))\n'})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to change the ",(0,s.jsx)(t.code,{children:"upsert"}),", you can use the ",(0,s.jsx)(t.code,{children:"orCreate"})," method:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'val newUser: User = User(id = "2", username = "janedoe")\n\nval requestWithUpsert: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user).orCreate(newUser)\n'})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to change the ",(0,s.jsx)(t.code,{children:"refresh"}),", you can use ",(0,s.jsx)(t.code,{children:"refresh"}),", ",(0,s.jsx)(t.code,{children:"refreshFalse"})," or ",(0,s.jsx)(t.code,{children:"refreshTrue"})," method:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'val requestWithRefresh: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user).refresh(true)\nval requestWithRefreshFalse: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user).refreshFalse\nval requestWithRefreshTrue: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user).refreshTrue\n'})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to change the ",(0,s.jsx)(t.code,{children:"routing"}),", you can use the ",(0,s.jsx)(t.code,{children:"routing"})," method:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'// this import is required for using `Routing` also\nimport zio.elasticsearch._\n\nval requestWithRouting: UpdateRequest = update(index = IndexName("index"), id = DocumentId("documentId"), doc = user).routing(Routing("routing"))\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can find more information about ",(0,s.jsx)(t.code,{children:"Update"})," request ",(0,s.jsx)(t.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-update.html",children:"here"}),"."]})]})}const l=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(u,e)})):u(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>o});var s=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},a=Object.keys(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=s.createContext({}),o=function(e){var t=s.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},l=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=o(r),h=n,m=p["".concat(d,".").concat(h)]||p[h]||u[h]||a;return r?s.createElement(m,i(i({ref:t},l),{},{components:r})):s.createElement(m,i({ref:t},l))}));l.displayName="MDXCreateElement"}}]);