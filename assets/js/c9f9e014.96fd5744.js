"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[352],{4268:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var t=r(7624),i=r(2172);const n={id:"elastic_request_refresh",title:"Refresh Request"},c=void 0,a={id:"overview/requests/elastic_request_refresh",title:"Refresh Request",description:"This request is used for refreshing Elasticsearch index.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_refresh.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_refresh",permalink:"/zio-elasticsearch/overview/requests/elastic_request_refresh",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_refresh.md",tags:[],version:"current",frontMatter:{id:"elastic_request_refresh",title:"Refresh Request"},sidebar:"docs",previous:{title:"Get By ID Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_get_by_id"},next:{title:"Search Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_search"}},o={},l=[];function d(e){const s=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,i.M)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"This request is used for refreshing Elasticsearch index."}),"\n",(0,t.jsxs)(s.p,{children:["In order to use the ",(0,t.jsx)(s.code,{children:"Refresh"})," request import the following:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"import zio.elasticsearch.ElasticRequest.RefreshRequest\nimport zio.elasticsearch.ElasticRequest.refresh\n// this import is required for using `IndexName`, `IndexPattern` and `MultiIndex`\nimport zio.elasticsearch._\n"})}),"\n",(0,t.jsxs)(s.p,{children:["You can create a ",(0,t.jsx)(s.code,{children:"Refresh"})," request using the ",(0,t.jsx)(s.code,{children:"refresh"})," method in the following manner:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'val request: RefreshRequest = refresh(selectors = IndexName("index"))\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If you want to refresh more indices, you can use ",(0,t.jsx)(s.code,{children:"refresh"})," method this way:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'val requestWithMultiIndex: RefreshRequest = refresh(selectors = MultiIndex.names(IndexName("index1"), IndexName("index2")))\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If you want to refresh all indices, you can use ",(0,t.jsx)(s.code,{children:"refresh"})," method with ",(0,t.jsx)(s.code,{children:"IndexPattern"})," this way:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'val requestWithIndexPattern: RefreshRequest = refresh(selectors = IndexPattern("_all"))\n'})}),"\n",(0,t.jsxs)(s.p,{children:["You can find more information about ",(0,t.jsx)(s.code,{children:"Refresh"})," request ",(0,t.jsx)(s.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/indices-refresh.html",children:"here"}),"."]})]})}const h=function(e={}){const{wrapper:s}=Object.assign({},(0,i.M)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},2172:(e,s,r)=>{r.d(s,{M:()=>c});var t=r(1504);const i={},n=t.createContext(i);function c(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}}}]);