"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,y=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return r?a.createElement(y,l(l({ref:t},d),{},{components:r})):a.createElement(y,l({ref:t},d))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5632:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={id:"elastic_query_wildcard",title:"Wildcard Query"},l=void 0,o={unversionedId:"overview/queries/elastic_query_wildcard",id:"overview/queries/elastic_query_wildcard",title:"Wildcard Query",description:"The Wildcard query returns documents that contain terms matching a wildcard pattern. You can combine wildcard operators with other characters to create a wildcard pattern.",source:"@site/../modules/docs/target/mdoc/overview/queries/elastic_query_wildcard.md",sourceDirName:"overview/queries",slug:"/overview/queries/elastic_query_wildcard",permalink:"/zio-elasticsearch/overview/queries/elastic_query_wildcard",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/queries/elastic_query_wildcard.md",tags:[],version:"current",frontMatter:{id:"elastic_query_wildcard",title:"Wildcard Query"},sidebar:"docs",previous:{title:"Terms Query",permalink:"/zio-elasticsearch/overview/queries/elastic_query_terms"},next:{title:"Overview",permalink:"/zio-elasticsearch/overview/elastic_aggregation"}},c={},s=[],d={toc:s},u="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query returns documents that contain terms matching a wildcard pattern. You can combine wildcard operators with other characters to create a wildcard pattern."),(0,n.kt)("p",null,"In order to use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query import the following:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.elasticsearch.query.WildcardQuery\nimport zio.elasticsearch.ElasticQuery._\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query can be created with ",(0,n.kt)("inlineCode",{parentName:"p"},"contains"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"startsWith")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"wildcard")," method.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"contains")," method is adjusted ",(0,n.kt)("inlineCode",{parentName:"p"},"wildcard")," method, that returns documents that contain terms containing provided text.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"startsWith")," method is adjusted ",(0,n.kt)("inlineCode",{parentName:"p"},"wildcard")," method that returns documents that contain terms starting with provided text."),(0,n.kt)("p",null,"To create a ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query use one of the following methods:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val query: WildcardQuery = contains(field = "name", value = "a")\nval query: WildcardQuery = startsWith(field = "name", value = "a")\nval query: WildcardQuery = wildcard(field = "name", value = "a*a*")\n')),(0,n.kt)("p",null,"To create a ",(0,n.kt)("a",{parentName:"p",href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema"},"type-safe")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query use one of the following methods:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val query: WildcardQuery = contains(field = Document.name, value = "a")\nval query: WildcardQuery = startsWith(field = Document.name, value = "a")\nval query: WildcardQuery = wildcard(field = Document.name, value = "a*a*")\n')),(0,n.kt)("p",null,"If you want to change the ",(0,n.kt)("inlineCode",{parentName:"p"},"boost"),", you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"boost")," method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val queryWithBoost: WildcardQuery = contains(field = Document.name, value = "test").boost(2.0)\n')),(0,n.kt)("p",null,"If you want to change the ",(0,n.kt)("inlineCode",{parentName:"p"},"case_insensitive"),", you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"caseInsensitive"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"caseInsensitiveFalse")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"caseInsensitiveTrue"),"  method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'val queryWithCaseInsensitive: WildcardQuery = contains(field = Document.name, value = "a").caseInsensitive(true)\nval queryWithCaseInsensitiveFalse: WildcardQuery = contains(field = Document.name, value = "a").caseInsensitiveFalse\nval queryWithCaseInsensitiveTrue: WildcardQuery = contains(field = Document.name, value = "a").caseInsensitiveTrue\n')),(0,n.kt)("p",null,"You can find more information about ",(0,n.kt)("inlineCode",{parentName:"p"},"Wildcard")," query ",(0,n.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/query-dsl-wildcard-query.html#query-dsl-wildcard-query"},"here"),"."))}p.isMDXComponent=!0}}]);