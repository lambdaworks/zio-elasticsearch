"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9792],{1476:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>g,metadata:()=>s,toc:()=>c});var a=n(7624),t=n(2172);const g={id:"elastic_aggregation_min",title:"Min Aggregation"},r=void 0,s={id:"overview/aggregations/elastic_aggregation_min",title:"Min Aggregation",description:"The Min aggregation is a single-value metrics aggregation that keeps track and returns the minimum value among the numeric values extracted from the aggregated documents.",source:"@site/../modules/docs/target/mdoc/overview/aggregations/elastic_aggregation_min.md",sourceDirName:"overview/aggregations",slug:"/overview/aggregations/elastic_aggregation_min",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_min",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/aggregations/elastic_aggregation_min.md",tags:[],version:"current",frontMatter:{id:"elastic_aggregation_min",title:"Min Aggregation"},sidebar:"docs",previous:{title:"Max Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_max"},next:{title:"Missing Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_missing"}},o={},c=[];function l(e){const i=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,t.M)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"Min"})," aggregation is a single-value metrics aggregation that keeps track and returns the minimum value among the numeric values extracted from the aggregated documents."]}),"\n",(0,a.jsxs)(i.p,{children:["In order to use the ",(0,a.jsx)(i.code,{children:"Min"})," aggregation import the following:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"import zio.elasticsearch.aggregation.MinAggregation\nimport zio.elasticsearch.ElasticAggregation.minAggregation\n"})}),"\n",(0,a.jsxs)(i.p,{children:["You can create a ",(0,a.jsx)(i.code,{children:"Min"})," aggregation using the ",(0,a.jsx)(i.code,{children:"minAggregation"})," method this way:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'val aggregation: MinAggregation = minAggregation(name = "minAggregation", field = "intField")\n'})}),"\n",(0,a.jsxs)(i.p,{children:["You can create a ",(0,a.jsx)(i.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,a.jsx)(i.code,{children:"Min"})," aggregation using the ",(0,a.jsx)(i.code,{children:"minAggregation"})," method this way:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'// Document.intField must be number value, because of Min aggregation\nval aggregation: MinAggregation = minAggregation(name = "minAggregation", field = Document.intField)\n'})}),"\n",(0,a.jsxs)(i.p,{children:["If you want to change the ",(0,a.jsx)(i.code,{children:"missing"})," parameter, you can use ",(0,a.jsx)(i.code,{children:"missing"})," method:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'val aggregationWithMissing: MinAggregation = minAggregation(name = "minAggregation", field = Document.intField).missing(10.0)\n'})}),"\n",(0,a.jsxs)(i.p,{children:["If you want to add aggregation (on the same level), you can use ",(0,a.jsx)(i.code,{children:"withAgg"})," method:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'val multipleAggregations: MultipleAggregations = minAggregation(name = "minAggregation1", field = Document.intField).withAgg(minAggregation(name = "minAggregation2", field = Document.doubleField))\n'})}),"\n",(0,a.jsxs)(i.p,{children:["You can find more information about ",(0,a.jsx)(i.code,{children:"Min"})," aggregation ",(0,a.jsx)(i.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-aggregations-metrics-min-aggregation.html",children:"here"}),"."]})]})}const d=function(e={}){const{wrapper:i}=Object.assign({},(0,t.M)(),e.components);return i?(0,a.jsx)(i,Object.assign({},e,{children:(0,a.jsx)(l,e)})):l(e)}},2172:(e,i,n)=>{n.d(i,{M:()=>r});var a=n(1504);const t={},g=a.createContext(t);function r(e){const i=a.useContext(g);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}}}]);