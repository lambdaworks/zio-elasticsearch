"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4438],{408:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var r=s(4848),a=s(8453);const i={id:"elastic_request_aggregate",title:"Aggregation Request"},n=void 0,o={id:"overview/requests/elastic_request_aggregate",title:"Aggregation Request",description:"This request is used to create aggregations which summarizes your data as metrics, statistics, or other analytics.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_aggregate.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_aggregate",permalink:"/zio-elasticsearch/overview/requests/elastic_request_aggregate",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_aggregate.md",tags:[],version:"current",frontMatter:{id:"elastic_request_aggregate",title:"Aggregation Request"},sidebar:"docs",previous:{title:"Overview",permalink:"/zio-elasticsearch/overview/elastic_request"},next:{title:"Bulk Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_bulk"}},c={},g=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This request is used to create aggregations which summarizes your data as metrics, statistics, or other analytics."}),"\n",(0,r.jsxs)(t.p,{children:["To create a ",(0,r.jsx)(t.code,{children:"Aggregate"})," request do the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio.elasticsearch.ElasticRequest.AggregateRequest\nimport zio.elasticsearch.ElasticRequest.aggregate\n// this import is required for using `IndexName`, `IndexPattern` and `MultiIndex`\nimport zio.elasticsearch._\nimport zio.elasticsearch.ElasticAggregation._\n\nval request: AggregateRequest = aggregate(selectors = IndexName("index"), aggregation = maxAggregation(name = "aggregation", field = "intField"))\n'})}),"\n",(0,r.jsxs)(t.p,{children:["If you want to create ",(0,r.jsx)(t.code,{children:"Aggregate"})," request with ",(0,r.jsx)(t.code,{children:"IndexPattern"}),", do the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'val requestWithIndexPattern: AggregateRequest = aggregate(selectors = IndexPattern("index*"), aggregation = maxAggregation(name = "aggregation", field = "intField"))\n'})}),"\n",(0,r.jsxs)(t.p,{children:["If you want to create ",(0,r.jsx)(t.code,{children:"Aggregate"})," request with ",(0,r.jsx)(t.code,{children:"MultiIndex"}),", do the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'val requestWithMultiIndex: AggregateRequest = aggregate(selectors = MultiIndex.names(IndexName("index1"), IndexName("index2")), aggregation = maxAggregation(name = "aggregation", field = "intField"))\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can find more information about ",(0,r.jsx)(t.code,{children:"Aggregate"})," request ",(0,r.jsx)(t.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-aggregations.html",children:"here"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>o});var r=s(6540);const a={},i=r.createContext(a);function n(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);