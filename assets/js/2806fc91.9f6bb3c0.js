"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9464],{4960:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>g,toc:()=>c});const g=JSON.parse('{"id":"overview/aggregations/elastic_aggregation_terms","title":"Terms Aggregation","description":"This aggregation is a multi-bucket value source based aggregation where buckets are dynamically built - one per unique value.","source":"@site/../modules/docs/target/mdoc/overview/aggregations/elastic_aggregation_terms.md","sourceDirName":"overview/aggregations","slug":"/overview/aggregations/elastic_aggregation_terms","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_terms","draft":false,"unlisted":false,"editUrl":"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/aggregations/elastic_aggregation_terms.md","tags":[],"version":"current","frontMatter":{"id":"elastic_aggregation_terms","title":"Terms Aggregation"},"sidebar":"docs","previous":{"title":"Sum Aggregation","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_sum"},"next":{"title":"Value count Aggregation","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_value_count"}}');var a=t(4848),n=t(8453);const i={id:"elastic_aggregation_terms",title:"Terms Aggregation"},s=void 0,o={},c=[];function l(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.p,{children:"This aggregation is a multi-bucket value source based aggregation where buckets are dynamically built - one per unique value."}),"\n",(0,a.jsxs)(r.p,{children:["In order to use the ",(0,a.jsx)(r.code,{children:"Terms"})," aggregation import the following:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:"import zio.elasticsearch.aggregation.TermsAggregation\nimport zio.elasticsearch.ElasticAggregation.termsAggregation\n"})}),"\n",(0,a.jsxs)(r.p,{children:["You can create a ",(0,a.jsx)(r.code,{children:"Terms"})," aggregation using the ",(0,a.jsx)(r.code,{children:"termsAggregation"})," method this way:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'val aggregation: TermsAggregation = termsAggregation(name = "termsAggregation", field = "stringField.keyword")\n'})}),"\n",(0,a.jsxs)(r.p,{children:["You can create a ",(0,a.jsx)(r.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,a.jsx)(r.code,{children:"Terms"})," aggregation using the ",(0,a.jsx)(r.code,{children:"termsAggregation"})," method this way:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'// Document.stringField must be string value, because of Terms aggregation\nval aggregation: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField.keyword)\n'})}),"\n",(0,a.jsxs)(r.p,{children:["If you want to change the ",(0,a.jsx)(r.code,{children:"order"}),", you can use ",(0,a.jsx)(r.code,{children:"orderBy"}),", ",(0,a.jsx)(r.code,{children:"orderByCountAsc"}),", ",(0,a.jsx)(r.code,{children:"orderByCountDesc"}),", ",(0,a.jsx)(r.code,{children:"orderByKeyAsc"})," or ",(0,a.jsx)(r.code,{children:"orderByKeyDesc"})," method:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import zio.elasticsearch.aggregation.AggregationOrder\nimport zio.elasticsearch.query.sort.SortOrder.Asc\n\nval aggregationWithOrder1: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).orderBy(AggregationOrder("otherAggregation", Asc))\nval aggregationWithOrder2: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).orderByCountAsc\nval aggregationWithOrder3: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).orderByCountDesc\nval aggregationWithOrder4: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).orderByKeyAsc\nval aggregationWithOrder5: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).orderByKeyDesc\n'})}),"\n",(0,a.jsxs)(r.p,{children:["If you want to change the ",(0,a.jsx)(r.code,{children:"size"}),", you can use ",(0,a.jsx)(r.code,{children:"size"})," method:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'val aggregationWithSize: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).size(5)\n'})}),"\n",(0,a.jsxs)(r.p,{children:["If you want to add aggregation (on the same level), you can use ",(0,a.jsx)(r.code,{children:"withAgg"})," method:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'val multipleAggregations: MultipleAggregations = termsAggregation(name = "termsAggregation", field = Document.stringField).withAgg(maxAggregation(name = "maxAggregation", field = Document.intField))\n'})}),"\n",(0,a.jsxs)(r.p,{children:["If you want to add another sub-aggregation, you can use ",(0,a.jsx)(r.code,{children:"withSubAgg"})," method:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'val aggregationWithSubAgg: TermsAggregation = termsAggregation(name = "termsAggregation", field = Document.stringField).withSubAgg(maxAggregation(name = "maxAggregation", field = Document.intField))\n'})}),"\n",(0,a.jsxs)(r.p,{children:["You can find more information about ",(0,a.jsx)(r.code,{children:"Terms"})," aggregation ",(0,a.jsx)(r.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation",children:"here"}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>s});var g=t(6540);const a={},n=g.createContext(a);function i(e){const r=g.useContext(n);return g.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),g.createElement(n.Provider,{value:r},e.children)}}}]);