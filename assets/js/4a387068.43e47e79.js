"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4767],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),o=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=o(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=o(r),y=a,m=d["".concat(l,".").concat(y)]||d[y]||p[y]||i;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=y;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[d]="string"==typeof e?e:a,s[1]=u;for(var o=2;o<i;o++)s[o]=r[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},3514:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>o});var n=r(7462),a=(r(7294),r(3905));const i={id:"elastic_request_delete_by_query",title:"Delete By Query Request"},s=void 0,u={unversionedId:"overview/requests/elastic_request_delete_by_query",id:"overview/requests/elastic_request_delete_by_query",title:"Delete By Query Request",description:"The DeleteByQuery request deletes documents that match the specified query.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_delete_by_query.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_delete_by_query",permalink:"/zio-elasticsearch/overview/requests/elastic_request_delete_by_query",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_delete_by_query.md",tags:[],version:"current",frontMatter:{id:"elastic_request_delete_by_query",title:"Delete By Query Request"},sidebar:"docs",previous:{title:"Delete By ID Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_delete_by_id"},next:{title:"Delete Index Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_delete_index"}},l={},o=[],c={toc:o},d="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"DeleteByQuery")," request deletes documents that match the specified query."),(0,a.kt)("p",null,"To create a ",(0,a.kt)("inlineCode",{parentName:"p"},"DeleteById")," request do the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.elasticsearch.ElasticRequest.DeleteByQueryRequest\nimport zio.elasticsearch.ElasticRequest.deleteByQuery\n// this import is required for using `IndexName`\nimport zio.elasticsearch._\nimport zio.elasticsearch.ElasticQuery._\n\nval request: DeleteByQueryRequest = deleteByQuery(index = IndexName("index"), query = contains(field = Document.name, value = "test"))\n')),(0,a.kt)("p",null,"If you want to change the ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh"),", you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshFalse")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshTrue")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'val requestWithRefresh: DeleteByQueryRequest = deleteByQuery(index = IndexName("index"), query = contains(field = Document.name, value = "test")).refresh(true)\nval requestWithRefreshFalse: DeleteByQueryRequest = deleteByQuery(index = IndexName("index"), query = contains(field = Document.name, value = "test")).refreshFalse\nval requestWithRefreshTrue: DeleteByQueryRequest = deleteByQuery(index = IndexName("index"), query = contains(field = Document.name, value = "test")).refreshTrue\n')),(0,a.kt)("p",null,"If you want to change the ",(0,a.kt)("inlineCode",{parentName:"p"},"routing"),", you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"routing")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'// this import is required for `Routing` also\nimport zio.elasticsearch._\n\nval requestWithRouting: DeleteByQueryRequest = deleteByQuery(index = IndexName("index"), query = contains(field = Document.name, value = "test")).routing(Routing("routing"))\n')),(0,a.kt)("p",null,"You can find more information about ",(0,a.kt)("inlineCode",{parentName:"p"},"DeleteByQuery")," request ",(0,a.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-delete-by-query.html"},"here"),"."))}p.isMDXComponent=!0}}]);