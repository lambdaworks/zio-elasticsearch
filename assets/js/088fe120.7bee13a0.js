"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1775],{3737:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var n=s(5893),r=s(1151);const i={id:"elastic_request_count",title:"Count Request"},c=void 0,o={id:"overview/requests/elastic_request_count",title:"Count Request",description:"The Count request is used for getting the number of matches for a search query. If no query is specified, matchAll query will be used to count all the documents.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_count.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_count",permalink:"/zio-elasticsearch/overview/requests/elastic_request_count",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_count.md",tags:[],version:"current",frontMatter:{id:"elastic_request_count",title:"Count Request"},sidebar:"docs",previous:{title:"Bulk Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_bulk"},next:{title:"Create Request, CreateWithId Request and CreateOrUpdate Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_create"}},u={},a=[];function l(e){const t=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,r.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Count"})," request is used for getting the number of matches for a search query. If no query is specified, ",(0,n.jsx)(t.code,{children:"matchAll"})," query will be used to count all the documents."]}),"\n",(0,n.jsxs)(t.p,{children:["In order to use the ",(0,n.jsx)(t.code,{children:"Count"})," request import the following:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:"import zio.elasticsearch.ElasticRequest.CountRequest\nimport zio.elasticsearch.ElasticRequest.count\n"})}),"\n",(0,n.jsxs)(t.p,{children:["You can create a ",(0,n.jsx)(t.code,{children:"Count"})," request using the ",(0,n.jsx)(t.code,{children:"count"})," method without specifying query this way:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'// this import is required for using `IndexName`\nimport zio.elasticsearch._\n\nval request: CountRequest = count(index = IndexName("index"))\n'})}),"\n",(0,n.jsxs)(t.p,{children:["You can create a ",(0,n.jsx)(t.code,{children:"Count"})," request using the ",(0,n.jsx)(t.code,{children:"count"})," method with specified query this way:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'import zio.elasticsearch.ElasticQuery._\n\nval request: CountRequest = count(index = IndexName("index"), query = contains(field = Document.name, value = "test"))\n'})}),"\n",(0,n.jsxs)(t.p,{children:["If you want to change the ",(0,n.jsx)(t.code,{children:"routing"}),", you can use the ",(0,n.jsx)(t.code,{children:"routing"})," method:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'// this import is required for using `Routing` also\nimport zio.elasticsearch._\n\nval requestWithRouting: CountRequest = count(index = Index("index")).routing(Routing("routing"))\n'})}),"\n",(0,n.jsxs)(t.p,{children:["You can find more information about ",(0,n.jsx)(t.code,{children:"Count"})," request ",(0,n.jsx)(t.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-count.html",children:"here"}),"."]})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},1151:(e,t,s)=>{s.d(t,{Zo:()=>o,ah:()=>i});var n=s(7294);const r=n.createContext({});function i(e){const t=n.useContext(r);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const c={};function o({components:e,children:t,disableParentContext:s}){let o;return o=s?"function"==typeof e?e({}):e||c:i(e),n.createElement(r.Provider,{value:o},t)}}}]);