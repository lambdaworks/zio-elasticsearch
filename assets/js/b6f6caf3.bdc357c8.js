"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3420],{100:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>g,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(5893),n=t(3905);const r={id:"elastic_aggregation_cardinality",title:"Cardinality Aggregation"},g=void 0,o={unversionedId:"overview/aggregations/elastic_aggregation_cardinality",id:"overview/aggregations/elastic_aggregation_cardinality",title:"Cardinality Aggregation",description:"The Cardinality aggregation is a single-value metrics aggregation that calculates an approximate count of distinct values.",source:"@site/../modules/docs/target/mdoc/overview/aggregations/elastic_aggregation_cardinality.md",sourceDirName:"overview/aggregations",slug:"/overview/aggregations/elastic_aggregation_cardinality",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_cardinality",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/aggregations/elastic_aggregation_cardinality.md",tags:[],version:"current",frontMatter:{id:"elastic_aggregation_cardinality",title:"Cardinality Aggregation"},sidebar:"docs",previous:{title:"Bucket Sort Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_bucket_sort"},next:{title:"Max Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_max"}},c={},l=[];function s(e){const a=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,n.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["The ",(0,i.jsx)(a.code,{children:"Cardinality"})," aggregation is a single-value metrics aggregation that calculates an approximate count of distinct values."]}),"\n",(0,i.jsxs)(a.p,{children:["In order to use the ",(0,i.jsx)(a.code,{children:"Cardinality"})," aggregation import the following:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",children:"import zio.elasticsearch.aggregation.CardinalityAggregation\nimport zio.elasticsearch.ElasticAggregation.cardinalityAggregation\n"})}),"\n",(0,i.jsxs)(a.p,{children:["You can create a ",(0,i.jsx)(a.code,{children:"Cardinality"})," aggregation using the ",(0,i.jsx)(a.code,{children:"cardinalityAggregation"})," method in the following manner:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",children:'val aggregation: CardinalityAggregation = cardinalityAggregation(name = "cardinalityAggregation", field = "intField")\n'})}),"\n",(0,i.jsxs)(a.p,{children:["You can create a ",(0,i.jsx)(a.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,i.jsx)(a.code,{children:"Cardinality"})," aggregation using the ",(0,i.jsx)(a.code,{children:"cardinalityAggregation"})," method in the following manner:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",children:'val aggregation: CardinalityAggregation = cardinalityAggregation(name = "cardinalityAggregation", field = Document.intField)\n'})}),"\n",(0,i.jsxs)(a.p,{children:["If you want to change the ",(0,i.jsx)(a.code,{children:"missing"}),", you can use ",(0,i.jsx)(a.code,{children:"missing"})," method:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",children:'val aggregationWithMissing: CardinalityAggregation = cardinalityAggregation(name = "cardinalityAggregation", field = Document.intField).missing(10.0)\n'})}),"\n",(0,i.jsxs)(a.p,{children:["If you want to add aggregation (on the same level), you can use ",(0,i.jsx)(a.code,{children:"withAgg"})," method:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",children:'val multipleAggregations: MultipleAggregations = cardinalityAggregation(name = "cardinalityAggregation", field = Document.intField).withAgg(maxAggregation(name = "maxAggregation", field = Document.doubleField))\n'})}),"\n",(0,i.jsxs)(a.p,{children:["You can find more information about ",(0,i.jsx)(a.code,{children:"Cardinality"})," aggregation ",(0,i.jsx)(a.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-aggregations-metrics-cardinality-aggregation.html",children:"here"}),"."]})]})}const d=function(e={}){const{wrapper:a}=Object.assign({},(0,n.ah)(),e.components);return a?(0,i.jsx)(a,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}},3905:(e,a,t)=>{t.d(a,{ah:()=>l});var i=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,i)}return t}function g(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,i,n=function(e,a){if(null==e)return{};var t,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=i.createContext({}),l=function(e){var a=i.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):g(g({},a),e)),t},s={inlineCode:"code",wrapper:function(e){var a=e.children;return i.createElement(i.Fragment,{},a)}},d=i.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(t),h=n,p=u["".concat(c,".").concat(h)]||u[h]||s[h]||r;return t?i.createElement(p,g(g({ref:a},d),{},{components:t})):i.createElement(p,g({ref:a},d))}));d.displayName="MDXCreateElement"}}]);