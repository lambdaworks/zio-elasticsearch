"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6244],{7185:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var n=r(5893),s=r(3905);const c={id:"elastic_request",title:"Overview"},a=void 0,i={unversionedId:"overview/elastic_request",id:"overview/elastic_request",title:"Overview",description:"We can represent an Elasticsearch request as a generic data type ElasticRequest[A], where A represents the result of the executed request.",source:"@site/../modules/docs/target/mdoc/overview/elastic_request.md",sourceDirName:"overview",slug:"/overview/elastic_request",permalink:"/zio-elasticsearch/overview/elastic_request",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/elastic_request.md",tags:[],version:"current",frontMatter:{id:"elastic_request",title:"Overview"},sidebar:"docs",previous:{title:"Terms Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_terms"},next:{title:"Aggregation Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_aggregate"}},o={},l=[];function d(e){const t=Object.assign({p:"p",code:"code",pre:"pre"},(0,s.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["We can represent an Elasticsearch request as a generic data type ",(0,n.jsx)(t.code,{children:"ElasticRequest[A]"}),", where ",(0,n.jsx)(t.code,{children:"A"})," represents the result of the executed request.\nThe library offers a DSL for creating these requests, by specifying their required parameters."]}),"\n",(0,n.jsx)(t.p,{children:"For example, we can create a request for deleting a document with a specified index as follows:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'ElasticRequest.deleteById(IndexName("index"), DocumentId("documentId"))\n'})}),"\n",(0,n.jsxs)(t.p,{children:["As you can see above, index names and document IDs are represented with ",(0,n.jsx)(t.code,{children:"IndexName"})," and ",(0,n.jsx)(t.code,{children:"DocumentId"})," respectively,\nusing Newtypes from ZIO Prelude, to increase type-safety with no runtime overhead."]}),"\n",(0,n.jsxs)(t.p,{children:["Elastic requests for creating and deleting return ",(0,n.jsx)(t.code,{children:"CreationOutcome"})," and ",(0,n.jsx)(t.code,{children:"DeletionOutcome"})," respectively, notifying us of the outcome of the request."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.elasticsearch._\nimport zio.elasticsearch.ElasticRequest._\n\nval createIndexWithoutMappingResult: RIO[Elasticsearch, CreationOutcome] =\n  Elasticsearch.execute(createIndex(IndexName("index")))\n        \nval createIndexWithMappingResult: RIO[Elasticsearch, CreationOutcome] =\n  Elasticsearch.execute(createIndex(IndexName("index"), "..."))\n      \nval deleteIndexResult: RIO[Elasticsearch, DeletionOutcome] =\n  Elasticsearch.execute(deleteIndex(IndexName("index")))\n'})}),"\n",(0,n.jsx)(t.p,{children:"All the DSL methods for request creation can be brought into scope with the following import:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:"import zio.elasticsearch.ElasticRequest._\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Executing the ",(0,n.jsx)(t.code,{children:"getById"})," request returns the following effect, where ",(0,n.jsx)(t.code,{children:"GetResult"})," represents a successful value:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.elasticsearch._\nimport zio.elasticsearch.ElasticRequest._\nimport zio.elasticsearch.result.{DecodingException, GetResult}\n\nval getByIdResult: RIO[Elasticsearch, GetResult] =\n  Elasticsearch.execute(getById(IndexName("index"), DocumentId("documentId")))\n'})}),"\n",(0,n.jsxs)(t.p,{children:["To return a document of custom type ",(0,n.jsx)(t.code,{children:"A"}),", you must create a schema for ",(0,n.jsx)(t.code,{children:"A"}),". Here is an example of creating a schema for a custom type ",(0,n.jsx)(t.code,{children:"User"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:"import zio.schema.{DeriveSchema, Schema}\n\nfinal case class User(id: String, name: String, email: String, age: Int)\n\nobject User {\n  implicit val schema: Schema[User] = DeriveSchema.gen[User]\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["As long as we have the implicit schema value in scope, we can transform ",(0,n.jsx)(t.code,{children:"GetResult"})," to a desired type ",(0,n.jsx)(t.code,{children:"A"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'val getUserByIdResult: RIO[Elasticsearch, IO[DecodingException, Option[User]]] =\n  Elasticsearch.execute(getById(IndexName("index"), DocumentId("documentId")))\n    .map(_.documentAs[User])\n'})})]})}const u=function(e={}){const{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>l});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=n.createContext({}),l=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,c=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=l(r),p=s,m=h["".concat(o,".").concat(p)]||h[p]||d[p]||c;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));u.displayName="MDXCreateElement"}}]);