"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5627],{5303:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"overview/queries/elastic_query_match","title":"Match Query","description":"The Match query is a type of query that searches for a provided text, number, date or boolean value.","source":"@site/../modules/docs/target/mdoc/overview/queries/elastic_query_match.md","sourceDirName":"overview/queries","slug":"/overview/queries/elastic_query_match","permalink":"/zio-elasticsearch/overview/queries/elastic_query_match","draft":false,"unlisted":false,"editUrl":"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/queries/elastic_query_match.md","tags":[],"version":"current","frontMatter":{"id":"elastic_query_match","title":"Match Query"},"sidebar":"docs","previous":{"title":"Has Parent Query","permalink":"/zio-elasticsearch/overview/queries/elastic_query_has_parent"},"next":{"title":"Match All Query","permalink":"/zio-elasticsearch/overview/queries/elastic_query_match_all"}}');var s=r(4848),c=r(8453);const i={id:"elastic_query_match",title:"Match Query"},n=void 0,o={},l=[];function u(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Match"})," query is a type of query that searches for a provided text, number, date or boolean value.\nThis is the standard query for performing a full-text search, including options for fuzzy matching."]}),"\n",(0,s.jsxs)(t.p,{children:["In order to use the ",(0,s.jsx)(t.code,{children:"Match"})," query import the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"import zio.elasticsearch.query.MatchQuery\nimport zio.elasticsearch.ElasticQuery._\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can create a ",(0,s.jsx)(t.code,{children:"Match"})," query using the ",(0,s.jsx)(t.code,{children:"matches"})," method in the following manner:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'val query: MatchQuery = matches(field = "message", value = "this is a test")\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can create a ",(0,s.jsx)(t.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,s.jsx)(t.code,{children:"Match"})," query using the ",(0,s.jsx)(t.code,{children:"matches"})," method in the following manner:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'val query: MatchQuery = matches(field = Document.message, value = "this is a test")\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can find more information about ",(0,s.jsx)(t.code,{children:"Match"})," query ",(0,s.jsx)(t.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html#query-dsl-match-query",children:"here"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>n});var a=r(6540);const s={},c=a.createContext(s);function i(e){const t=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);