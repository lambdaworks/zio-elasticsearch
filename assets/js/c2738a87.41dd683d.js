"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[3848],{4087:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>g,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"overview/aggregations/elastic_aggregation_percentile_ranks","title":"Percentiles Aggregation","description":"The Percentile ranks aggregation is a multi-value metrics aggregation that calculates percentile of values at or below a threshold grouped by a specified value.","source":"@site/../modules/docs/target/mdoc/overview/aggregations/elastic_aggregation_percentile_ranks.md","sourceDirName":"overview/aggregations","slug":"/overview/aggregations/elastic_aggregation_percentile_ranks","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_percentile_ranks","draft":false,"unlisted":false,"editUrl":"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/aggregations/elastic_aggregation_percentile_ranks.md","tags":[],"version":"current","frontMatter":{"id":"elastic_aggregation_percentile_ranks","title":"Percentiles Aggregation"},"sidebar":"docs","previous":{"title":"Missing Aggregation","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_missing"},"next":{"title":"Percentiles Aggregation","permalink":"/zio-elasticsearch/overview/aggregations/elastic_aggregation_percentiles"}}');var t=a(4848),r=a(8453);const s={id:"elastic_aggregation_percentile_ranks",title:"Percentiles Aggregation"},g=void 0,o={},c=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Percentile ranks"})," aggregation is a multi-value metrics aggregation that calculates percentile of values at or below a threshold grouped by a specified value."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use the ",(0,t.jsx)(n.code,{children:"Percentile ranks"})," aggregation import the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"import zio.elasticsearch.aggregation.PercentileRanksAggregation\nimport zio.elasticsearch.ElasticAggregation.percentileRanksAggregation\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can create a ",(0,t.jsx)(n.code,{children:"Percentile ranks"})," aggregation using the ",(0,t.jsx)(n.code,{children:"percentileRanksAggregation"})," method this way:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val aggregation: PercentileRanksAggregation = percentileRanksAggregation(field = "intField", name = "percentileRanksAggregation", values = 500, 600)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can create a ",(0,t.jsx)(n.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,t.jsx)(n.code,{children:"Percentile ranks"})," aggregation using the ",(0,t.jsx)(n.code,{children:"percentileRanksAggregation"})," method this way:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'// Document.intField must be number value\nval aggregation: PercentileRanksAggregation = percentileRanksAggregation(field = Document.intField, name = "percentileRanksAggregation", values = 500, 600)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to change the ",(0,t.jsx)(n.code,{children:"missing"}),", you can use ",(0,t.jsx)(n.code,{children:"missing"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val aggregationWithMissing: PercentileRanksAggregation = percentileRanksAggregation(field = Document.intField, name = "percentileRanksAggregation", values = 500, 600).missing(10.0)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to add aggregation (on the same level), you can use ",(0,t.jsx)(n.code,{children:"withAgg"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val multipleAggregations: MultipleAggregations = percentileRanksAggregation(field = Document.intField, name = "percentileRanksAggregation1", values = 500, 600).withAgg(percentileRanksAggregation(field = Document.doubleField, name = "percentileRanksAggregation2", values = 500, 600))\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can find more information about ",(0,t.jsx)(n.code,{children:"Percentile ranks"})," aggregation ",(0,t.jsx)(n.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-rank-aggregation.html",children:"here"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>g});var i=a(6540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);