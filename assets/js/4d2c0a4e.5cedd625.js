"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9189],{6450:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>g,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=t(5893),r=t(3905);const i={id:"elastic_aggregation_max",title:"Max Aggregation"},g=void 0,o={unversionedId:"overview/aggregations/elastic_aggregation_max",id:"overview/aggregations/elastic_aggregation_max",title:"Max Aggregation",description:"The Max aggregation is a single-value metrics aggregation that keeps track and returns the maximum value among the numeric values extracted from the aggregated documents.",source:"@site/../modules/docs/target/mdoc/overview/aggregations/elastic_aggregation_max.md",sourceDirName:"overview/aggregations",slug:"/overview/aggregations/elastic_aggregation_max",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_max",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/aggregations/elastic_aggregation_max.md",tags:[],version:"current",frontMatter:{id:"elastic_aggregation_max",title:"Max Aggregation"},sidebar:"docs",previous:{title:"Cardinality Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_cardinality"},next:{title:"Terms Aggregation",permalink:"/zio-elasticsearch/overview/aggregations/elastic_aggregation_terms"}},s={},c=[];function l(e){const a=Object.assign({p:"p",code:"code",pre:"pre",a:"a"},(0,r.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"Max"})," aggregation is a single-value metrics aggregation that keeps track and returns the maximum value among the numeric values extracted from the aggregated documents."]}),"\n",(0,n.jsxs)(a.p,{children:["In order to use the ",(0,n.jsx)(a.code,{children:"Max"})," aggregation import the following:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:"import zio.elasticsearch.aggregation.MaxAggregation\nimport zio.elasticsearch.ElasticAggregation.maxAggregation\n"})}),"\n",(0,n.jsxs)(a.p,{children:["You can create a ",(0,n.jsx)(a.code,{children:"Max"})," aggregation using the ",(0,n.jsx)(a.code,{children:"maxAggregation"})," method this way:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:'val aggregation: MaxAggregation = maxAggregation(name = "maxAggregation", field = "intField")\n'})}),"\n",(0,n.jsxs)(a.p,{children:["You can create a ",(0,n.jsx)(a.a,{href:"https://lambdaworks.github.io/zio-elasticsearch/overview/overview_zio_prelude_schema",children:"type-safe"})," ",(0,n.jsx)(a.code,{children:"Max"})," aggregation using the ",(0,n.jsx)(a.code,{children:"maxAggregation"})," method this way:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:'// Document.intField must be number value, because of Max aggregation\nval aggregation: MaxAggregation = maxAggregation(name = "maxAggregation", field = Document.intField)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["If you want to change the ",(0,n.jsx)(a.code,{children:"missing"}),", you can use ",(0,n.jsx)(a.code,{children:"missing"})," method:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:'val aggregationWithMissing: MaxAggregation = maxAggregation(name = "maxAggregation", field = Document.intField).missing(10.0)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["If you want to add aggregation (on the same level), you can use ",(0,n.jsx)(a.code,{children:"withAgg"})," method:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:'val multipleAggregations: MultipleAggregations = maxAggregation(name = "maxAggregation1", field = Document.intField).withAgg(maxAggregation(name = "maxAggregation2", field = Document.doubleField))\n'})}),"\n",(0,n.jsxs)(a.p,{children:["You can find more information about ",(0,n.jsx)(a.code,{children:"Max"})," aggregation ",(0,n.jsx)(a.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/search-aggregations-metrics-max-aggregation.html",children:"here"}),"."]})]})}const d=function(e={}){const{wrapper:a}=Object.assign({},(0,r.ah)(),e.components);return a?(0,n.jsx)(a,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},3905:(e,a,t)=>{t.d(a,{ah:()=>c});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function g(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):g(g({},a),e)),t},l={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,h=m["".concat(s,".").concat(u)]||m[u]||l[u]||i;return t?n.createElement(h,g(g({ref:a},d),{},{components:t})):n.createElement(h,g({ref:a},d))}));d.displayName="MDXCreateElement"}}]);