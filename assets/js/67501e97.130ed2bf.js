"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[38],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:i,o[1]=u;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={id:"elastic_request_bulk",title:"Bulk Request"},o=void 0,u={unversionedId:"overview/requests/elastic_request_bulk",id:"overview/requests/elastic_request_bulk",title:"Bulk Request",description:"The Bulk request performs multiple indexing or delete operations in a single API call. This reduces overhead and can greatly increase indexing speed.",source:"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_bulk.md",sourceDirName:"overview/requests",slug:"/overview/requests/elastic_request_bulk",permalink:"/zio-elasticsearch/overview/requests/elastic_request_bulk",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_bulk.md",tags:[],version:"current",frontMatter:{id:"elastic_request_bulk",title:"Bulk Request"},sidebar:"docs",previous:{title:"Aggregation Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_aggregate"},next:{title:"Count Request",permalink:"/zio-elasticsearch/overview/requests/elastic_request_count"}},s={},l=[],c={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Bulk")," request performs multiple indexing or delete operations in a single API call. This reduces overhead and can greatly increase indexing speed."),(0,i.kt)("p",null,"In order to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Bulk")," request import the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.elasticsearch.ElasticRequest.BulkRequest\nimport zio.elasticsearch.ElasticRequest.bulk\n")),(0,i.kt)("p",null,"You can create a ",(0,i.kt)("inlineCode",{parentName:"p"},"Bulk")," request using the ",(0,i.kt)("inlineCode",{parentName:"p"},"bulk")," method this way:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'// this import is required for using `IndexName` and `DocumentId`\nimport zio.elasticsearch._\n\nval index = Index("index")\n\nval document1 = new Document(id = DocumentId("111"), intField = 1, stringField = "stringField1")\nval document2 = new Document(id = DocumentId("222"), intField = 2, stringField = "stringField2")\n\nval request: BulkRequest = bulk(create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2))\n')),(0,i.kt)("p",null,"If you want to change the ",(0,i.kt)("inlineCode",{parentName:"p"},"refresh"),", you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"refresh"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refreshFalse")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"refreshTrue")," method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'val requestWithRefresh: BulkRequest = bulk(create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refresh(true)\nval requestWithRefreshFalse: BulkRequest = bulk(create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refreshFalse\nval requestWithRefreshTrue: BulkRequest = bulk(create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refreshTrue\n')),(0,i.kt)("p",null,"If you want to change the ",(0,i.kt)("inlineCode",{parentName:"p"},"routing"),", you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"routing")," method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'// this import is required for using `Routing` also\nimport zio.elasticsearch._\n\nval requestWithRouting: BulkRequest = bulk(create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).routing(Routing("routing"))\n')),(0,i.kt)("p",null,"You can find more information about ",(0,i.kt)("inlineCode",{parentName:"p"},"Bulk")," request ",(0,i.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-bulk.html"},"here"),"."))}p.isMDXComponent=!0}}]);