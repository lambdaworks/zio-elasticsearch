"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[376],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7340:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={id:"overview_fluent_api",title:"Fluent API"},i=void 0,l={unversionedId:"overview/overview_fluent_api",id:"overview/overview_fluent_api",title:"Fluent API",description:"Both Elastic requests and queries offer a fluent API so that we could provide optional parameters in chained method calls for each request or query.",source:"@site/../modules/docs/target/mdoc/overview/fluent_api.md",sourceDirName:"overview",slug:"/overview/overview_fluent_api",permalink:"/zio-elasticsearch/overview/overview_fluent_api",draft:!1,editUrl:"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/fluent_api.md",tags:[],version:"current",frontMatter:{id:"overview_fluent_api",title:"Fluent API"},sidebar:"docs",previous:{title:"Executing Requests",permalink:"/zio-elasticsearch/overview/overview_elastic_executor"},next:{title:"Bulkable",permalink:"/zio-elasticsearch/overview/overview_bulkable"}},s={},p=[],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Both Elastic requests and queries offer a fluent API so that we could provide optional parameters in chained method calls for each request or query.\nIf you are creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"Bool")," query that can possibly contain ",(0,a.kt)("inlineCode",{parentName:"p"},"must"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"mustNot"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"should"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"filter")," queries, you can just use one of the methods from the ",(0,a.kt)("inlineCode",{parentName:"p"},"ElasticQuery")," object to create any of them and then just fluently chain any other to the original one."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'ElasticQuery.must(ElasticQuery.range("version").gte(7).lt(10)).should(ElasticQuery.startsWith("name", "ZIO"))\n')),(0,a.kt)("p",null,"And if we wanted to specify lower and upper bounds for a ",(0,a.kt)("inlineCode",{parentName:"p"},"range")," query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"ElasticQuery.range(User.age).gte(18).lt(100)\n")),(0,a.kt)("p",null,"Fluent API is also supported for parameters like ",(0,a.kt)("inlineCode",{parentName:"p"},"routing")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh"),", for example, if we wanted to add routing and refresh parameters to a ",(0,a.kt)("inlineCode",{parentName:"p"},"deleteById")," request:\nMethods ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshTrue")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshFalse")," are just shortcuts for using ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh(true)")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh(false)"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'ElasticRequest.deleteById(IndexName("index"), DocumentId("documentId")).routing(Routing("routing")).refreshTrue\n')),(0,a.kt)("p",null,"When creating aggregations we can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"withAgg")," method to add another aggregation and return the ",(0,a.kt)("inlineCode",{parentName:"p"},"MultipleAggregations")," type that contains both aggregations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'ElasticAggregation.termsAggregation(name = "firstAggregation", field = "name")\n  .withAgg(ElasticAggregation.termsAggregation(name = "secondAggregation", field = "age"))\n')),(0,a.kt)("p",null,"Creating ",(0,a.kt)("inlineCode",{parentName:"p"},"sort")," also supports fluent API, as it is shown in the code below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'ElasticSort.sortBy("age").mode(SortMode.Avg)\nElasticSort.sortBy("first_name").missing(Missing.First)\nElasticSort.sortBy("created_at").format("strict_date_optional_time_nanos")\n')))}d.isMDXComponent=!0}}]);