"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[841],{7422:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"overview/queries/elastic_query_ids","title":"IDs Query","description":"The IDs returns documents based on their IDs. This query uses document IDs stored in the _id field.","source":"@site/../modules/docs/target/mdoc/overview/queries/elastic_query_ids.md","sourceDirName":"overview/queries","slug":"/overview/queries/elastic_query_ids","permalink":"/zio-elasticsearch/overview/queries/elastic_query_ids","draft":false,"unlisted":false,"editUrl":"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/queries/elastic_query_ids.md","tags":[],"version":"current","frontMatter":{"id":"elastic_query_ids","title":"IDs Query"},"sidebar":"docs","previous":{"title":"Wildcard Query","permalink":"/zio-elasticsearch/overview/queries/elastic_query_wildcard"},"next":{"title":"Overview","permalink":"/zio-elasticsearch/overview/elastic_aggregation"}}');var t=r(4848),n=r(8453);const c={id:"elastic_query_ids",title:"IDs Query"},o=void 0,d={},a=[];function l(e){const s={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"IDs"})," returns documents based on their IDs. This query uses document IDs stored in the _id field."]}),"\n",(0,t.jsxs)(s.p,{children:["In order to use the ",(0,t.jsx)(s.code,{children:"IDs"})," query import the following:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"import zio.elasticsearch.query.IdsQuery\nimport zio.elasticsearch.ElasticQuery._\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"IDs"})," query can be created with ",(0,t.jsx)(s.code,{children:"ids"})," method."]}),"\n",(0,t.jsxs)(s.p,{children:["To create a ",(0,t.jsx)(s.code,{children:"IDs"})," query use the following method:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'val query: IdsQuery = ids("id1")\nval query: IdsQuery = ids("id1", "id2", "id3")\n'})}),"\n",(0,t.jsxs)(s.p,{children:["You can find more information about ",(0,t.jsx)(s.code,{children:"IDs"})," query ",(0,t.jsx)(s.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/query-dsl-ids-query.html",children:"here"}),"."]})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>o});var i=r(6540);const t={},n=i.createContext(t);function c(e){const s=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);