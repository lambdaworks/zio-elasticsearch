"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8795],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},8746:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"overview/requests/elastic_request_bulk","title":"Bulk Request","description":"The Bulk request performs multiple indexing or delete operations in a single API call. This reduces overhead and can greatly increase indexing speed.","source":"@site/../modules/docs/target/mdoc/overview/requests/elastic_request_bulk.md","sourceDirName":"overview/requests","slug":"/overview/requests/elastic_request_bulk","permalink":"/zio-elasticsearch/overview/requests/elastic_request_bulk","draft":false,"unlisted":false,"editUrl":"https://github.com/lambdaworks/zio-elasticsearch/edit/main/docs/overview/requests/elastic_request_bulk.md","tags":[],"version":"current","frontMatter":{"id":"elastic_request_bulk","title":"Bulk Request"},"sidebar":"docs","previous":{"title":"Aggregation Request","permalink":"/zio-elasticsearch/overview/requests/elastic_request_aggregate"},"next":{"title":"Count Request","permalink":"/zio-elasticsearch/overview/requests/elastic_request_count"}}');var s=t(4848),r=t(8453);const o={id:"elastic_request_bulk",title:"Bulk Request"},d=void 0,l={},c=[];function u(e){const n={a:"a",code:"code",em:"em",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Bulk"})," request performs multiple indexing or delete operations in a single API call. This reduces overhead and can greatly increase indexing speed."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use the ",(0,s.jsx)(n.code,{children:"Bulk"})," request import the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:"import zio.elasticsearch.ElasticRequest.BulkRequest\nimport zio.elasticsearch.ElasticRequest.bulk\n// this import is required for using `IndexName` and `DocumentId`\nimport zio.elasticsearch._\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can create a ",(0,s.jsx)(n.code,{children:"Bulk"})," request using the ",(0,s.jsx)(n.code,{children:"bulk"})," method, which offers two main ways to handle indices:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["With a global index:\nThis approach is ideal when most (or all) of your bulk operations target the same index. You provide a default index for the entire bulk request as\nthe first argument. Any individual operation within this ",(0,s.jsx)(n.code,{children:"bulk"})," request that doesn't explicitly specify its own index will automatically use this\nglobal index.\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Important: If an individual operation does specify its own index, that individual index will always take precedence over the global one for that\nspecific operation."})})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'val index = IndexName("my-global-index")\n\nval document1 = new Document(id = DocumentId("111"), intField = 1, stringField = "stringField1")\nval document2 = new Document(id = DocumentId("222"), intField = 2, stringField = "stringField2")\n\nval request: BulkRequest = bulk(\nindex = index,\nrequests = create(doc = document1),\nupsert(id = DocumentId("111"), doc = document2)\n)\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Without a global index:\nChoose this method when your bulk operations frequently target different indices, or when you prefer to explicitly define the index for every single\noperation. When using this variant, each individual ",(0,s.jsx)(n.code,{children:"BulkableRequest"})," must specify its own index."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'val index1 = IndexName("first-index")\nval index2 = IndexName("second-index")\n\nval document1 = new Document(id = DocumentId("111"), intField = 1, stringField = "stringField1")\nval document2 = new Document(id = DocumentId("222"), intField = 2, stringField = "stringField2")\n\nval request: BulkRequest = bulk(\n  requests = create(index = index1, doc = document1),\n  upsert(index = index2, id = DocumentId("111"), doc = document2)\n)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to change the ",(0,s.jsx)(n.code,{children:"refresh"}),", you can use ",(0,s.jsx)(n.code,{children:"refresh"}),", ",(0,s.jsx)(n.code,{children:"refreshFalse"})," or ",(0,s.jsx)(n.code,{children:"refreshTrue"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'val requestWithRefresh: BulkRequest = bulk(requests = create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refresh(true)\nval requestWithRefreshFalse: BulkRequest = bulk(requests = create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refreshFalse\nval requestWithRefreshTrue: BulkRequest = bulk(requests = create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).refreshTrue\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to change the ",(0,s.jsx)(n.code,{children:"routing"}),", you can use the ",(0,s.jsx)(n.code,{children:"routing"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'// this import is required for using `Routing` also\nimport zio.elasticsearch._\n\nval requestWithRouting: BulkRequest = bulk(requests = create(index = index, doc = document1), upsert(index = index, id = DocumentId("111"), doc = document2)).routing(Routing("routing"))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can find more information about ",(0,s.jsx)(n.code,{children:"Bulk"})," request ",(0,s.jsx)(n.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-bulk.html",children:"here"}),"."]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);